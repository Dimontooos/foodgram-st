name: Ardeev_Dmitry_Foodgram

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.0  # Синхронизируем с docker-compose.yml
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: qwerty
          POSTGRES_DB: django
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10  # Увеличиваем количество попыток

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client  # Устанавливаем pg_isready

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Синхронизируем с Dockerfile

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run Flake8
        run: |
          flake8 backend/

      - name: Debug PostgreSQL logs
        run: |
          docker logs $(docker ps -q -f 'ancestor=postgres:14.0')  # Логи для отладки

      - name: Check PostgreSQL connectivity
        run: |
          ping -c 4 db
          nc -zv db 5432  # Проверка сетевой доступности

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h db -p 5432 -U django -d django; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL to be ready... (attempt $i/30)"
            sleep 5  # Увеличиваем интервал ожидания
            if [ $i -eq 30 ]; then
              echo "PostgreSQL is not ready after 30 attempts. Exiting..."
              exit 1
            fi
          done

      - name: Run migrations
        env:
          DB_HOST: db
          DB_PORT: 5432
          POSTGRES_USER: django
          POSTGRES_PASSWORD: qwerty
          POSTGRES_DB: django
          SECRET_KEY: django-insecure-6&-%5ecbx&al2#xr!*@-og6al!kp8qcl%1_k7auy#i6e@(2+iz
          ALLOWED_HOSTS: localhost,127.0.0.1,0.0.0.0
          DEBUG: False
        run: |
          cd backend
          python manage.py migrate

      - name: Load test data
        env:
          DB_HOST: db
          DB_PORT: 5432
          POSTGRES_USER: django
          POSTGRES_PASSWORD: qwerty
          POSTGRES_DB: django
          SECRET_KEY: django-insecure-6&-%5ecbx&al2#xr!*@-og6al!kp8qcl%1_k7auy#i6e@(2+iz
          ALLOWED_HOSTS: localhost,127.0.0.1,0.0.0.0
          DEBUG: False
        run: |
          cd backend
          python manage.py call_to_bd

  build_and_push_backend_to_docker_hub:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

  build_and_push_frontend_to_docker_hub:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest
